{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/asya/Desktop/crypto-list-app/src/actions/crypto.ts"],"sourcesContent":["'use server';\n\nimport { CryptoItem, CryptoItemInsert } from '@/types/supabase';\nimport { createClient } from '@supabase/supabase-js';\nimport { revalidatePath } from 'next/cache';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\nexport async function addCryptoItem(data: CryptoItemInsert) {\n  try {\n    const { data: insertedData, error } = await supabase\n      .from('crypto-item')\n      .insert(data)\n      .select()\n      .single();\n\n    if (error) throw error;\n    revalidatePath('/');\n    return { data: insertedData as CryptoItem, error: null };\n  } catch (error) {\n    if (error instanceof Error) {\n      console.error('Error inserting data:', error.message);\n      return { data: null, error: error.message };\n    }\n    return {\n      data: null,\n      error: 'Failed to add cryptocurrency. Please try again.',\n    };\n  }\n}\n\nexport async function getUserCryptoList(userId: string | null) {\n  try {\n    let query = supabase\n      .from('crypto-item')\n      .select('*')\n      .order('created_at', { ascending: false });\n\n    if (userId) {\n      query = query.eq('userId', userId);\n    }\n    const { data, error } = await query;\n    if (error) throw error;\n    return { data: data as CryptoItem[], error: null };\n  } catch (error) {\n    if (error instanceof Error) {\n      console.error('Error fetching data:', error.message);\n      return { data: null, error: error.message };\n    }\n    return { data: null, error: 'Failed to fetch cryptocurrency list.' };\n  }\n}\n\nexport async function editCryptoItem(\n  id: string,\n  data: Partial<CryptoItemInsert>\n) {\n  try {\n    const { data: updatedData, error } = await supabase\n      .from('crypto-item')\n      .update(data)\n      .eq('id', id)\n      .select()\n      .single();\n\n    if (error) throw error;\n    revalidatePath('/');\n    return { data: updatedData as CryptoItem, error: null };\n  } catch (error) {\n    if (error instanceof Error) {\n      console.error('Error editing data:', error.message);\n      return { data: null, error: error.message };\n    }\n    return { data: null, error: 'Failed to edit list item' };\n  }\n}\n\nexport async function deleteCryptoItem(id: string) {\n  try {\n    const { error } = await supabase.from('crypto-item').delete().eq('id', id);\n    if (error) throw error;\n    revalidatePath('/');\n    return { data: true, error: null };\n  } catch (error) {\n    if (error instanceof Error) {\n      console.error('Error deleting item:', error.message);\n      return { data: null, error: error.message };\n    }\n    return { data: null, error: 'Failed to delete list item' };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAIA;;AADA;;;;;AAGA,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD;AAKrB,eAAe,uCAAW,GAAX,cAAc,IAAsB;IACxD,IAAI;QACF,MAAM,EAAE,MAAM,YAAY,EAAE,KAAK,EAAE,GAAG,MAAM,SACzC,IAAI,CAAC,eACL,MAAM,CAAC,MACP,MAAM,GACN,MAAM;QAET,IAAI,OAAO,MAAM;QACjB,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO;YAAE,MAAM;YAA4B,OAAO;QAAK;IACzD,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,OAAO;YAC1B,QAAQ,KAAK,CAAC,yBAAyB,MAAM,OAAO;YACpD,OAAO;gBAAE,MAAM;gBAAM,OAAO,MAAM,OAAO;YAAC;QAC5C;QACA,OAAO;YACL,MAAM;YACN,OAAO;QACT;IACF;AACF;AAEO,eAAe,uCAAe,GAAf,kBAAkB,MAAqB;IAC3D,IAAI;QACF,IAAI,QAAQ,SACT,IAAI,CAAC,eACL,MAAM,CAAC,KACP,KAAK,CAAC,cAAc;YAAE,WAAW;QAAM;QAE1C,IAAI,QAAQ;YACV,QAAQ,MAAM,EAAE,CAAC,UAAU;QAC7B;QACA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM;QAC9B,IAAI,OAAO,MAAM;QACjB,OAAO;YAAE,MAAM;YAAsB,OAAO;QAAK;IACnD,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,OAAO;YAC1B,QAAQ,KAAK,CAAC,wBAAwB,MAAM,OAAO;YACnD,OAAO;gBAAE,MAAM;gBAAM,OAAO,MAAM,OAAO;YAAC;QAC5C;QACA,OAAO;YAAE,MAAM;YAAM,OAAO;QAAuC;IACrE;AACF;AAEO,eAAe,uCAAY,GAAZ,eACpB,EAAU,EACV,IAA+B;IAE/B,IAAI;QACF,MAAM,EAAE,MAAM,WAAW,EAAE,KAAK,EAAE,GAAG,MAAM,SACxC,IAAI,CAAC,eACL,MAAM,CAAC,MACP,EAAE,CAAC,MAAM,IACT,MAAM,GACN,MAAM;QAET,IAAI,OAAO,MAAM;QACjB,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO;YAAE,MAAM;YAA2B,OAAO;QAAK;IACxD,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,OAAO;YAC1B,QAAQ,KAAK,CAAC,uBAAuB,MAAM,OAAO;YAClD,OAAO;gBAAE,MAAM;gBAAM,OAAO,MAAM,OAAO;YAAC;QAC5C;QACA,OAAO;YAAE,MAAM;YAAM,OAAO;QAA2B;IACzD;AACF;AAEO,eAAe,uCAAc,GAAd,iBAAiB,EAAU;IAC/C,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,eAAe,MAAM,GAAG,EAAE,CAAC,MAAM;QACvE,IAAI,OAAO,MAAM;QACjB,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO;YAAE,MAAM;YAAM,OAAO;QAAK;IACnC,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,OAAO;YAC1B,QAAQ,KAAK,CAAC,wBAAwB,MAAM,OAAO;YACnD,OAAO;gBAAE,MAAM;gBAAM,OAAO,MAAM,OAAO;YAAC;QAC5C;QACA,OAAO;YAAE,MAAM;YAAM,OAAO;QAA6B;IAC3D;AACF;;;IAlFsB;IAuBA;IAsBA;IAwBA;;AArEA,+OAAA;AAuBA,+OAAA;AAsBA,+OAAA;AAwBA,+OAAA"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///home/asya/Desktop/crypto-list-app/src/components/CryptoForm/index.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/CryptoForm/index.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/CryptoForm/index.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuS,GACpU,qEACA"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///home/asya/Desktop/crypto-list-app/src/components/CryptoForm/index.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/CryptoForm/index.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/CryptoForm/index.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmR,GAChT,iDACA"}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/asya/Desktop/crypto-list-app/src/components/CryptoListItems/index.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/CryptoListItems/index.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/CryptoListItems/index.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4S,GACzU,0EACA"}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file:///home/asya/Desktop/crypto-list-app/src/components/CryptoListItems/index.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/CryptoListItems/index.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/CryptoListItems/index.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwR,GACrT,sDACA"}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///home/asya/Desktop/crypto-list-app/src/app/page.tsx"],"sourcesContent":["import { getUserCryptoList } from \"@/actions/crypto\";\nimport CryptoForm from \"@/components/CryptoForm\";\nimport CryptoListItems from \"@/components/CryptoListItems\";\nimport { auth } from \"@clerk/nextjs/server\";\n\nexport default async function CryptoListContent() {\n  const user = await auth();\n  const { data: initialData } = await getUserCryptoList(user.userId);\n\n  return (\n    <>\n      {!!user.userId && <CryptoForm />}\n      {initialData && <CryptoListItems items={initialData} />}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,eAAe;IAC5B,MAAM,OAAO,MAAM,CAAA,GAAA,mLAAA,CAAA,OAAI,AAAD;IACtB,MAAM,EAAE,MAAM,WAAW,EAAE,GAAG,MAAM,CAAA,GAAA,wHAAA,CAAA,oBAAiB,AAAD,EAAE,KAAK,MAAM;IAEjE,qBACE;;YACG,CAAC,CAAC,KAAK,MAAM,kBAAI,8OAAC,yIAAA,CAAA,UAAU;;;;;YAC5B,6BAAe,8OAAC,8IAAA,CAAA,UAAe;gBAAC,OAAO;;;;;;;;AAG9C"}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}